/* Auto-generated by utensor cli */
#ifndef __MYCONV_INTERFACE_H
#define __MYCONV_INTERFACE_H
#include "uTensor.h"

using namespace uTensor;

class Myconv : public ModelInterface<1, 1> 
{
 public:
  enum input_names : uint8_t { input_0 };
  enum output_names : uint8_t { output_0 };
  Myconv();
 protected:
  virtual void compute();
 private:
  // Operators
  TflmSymQuantOps::QuantizeOperator<int8_t, float> op_QuantizeOperator_000;

  TflmSymQuantOps::FullyConnectedOperator<int8_t> op_FullyConnectedOperator_001;

  ReferenceOperators::ReLUOperator<int8_t> op_ReLUOperator_002;

  ReferenceOperators::MaxPoolOperator<int8_t> op_MaxPoolOperator_003;

  ReferenceOperators::ReshapeOperator<int8_t> op_ReshapeOperator_004;

  ReferenceOperators::Conv2dOperator<int8_t> op_Conv2dOperator_005;

  TflmSymQuantOps::DequantizeOperator<float, int8_t> op_DequantizeOperator_006;

  // memory allocators
  localCircularArenaAllocator<31800, uint16_t> ram_allocator;
  localCircularArenaAllocator<1088, uint16_t> metadata_allocator;
};

#endif // __MYCONV_INTERFACE_H